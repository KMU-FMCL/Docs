{"Docker/Docker":{"title":"Docker","links":[],"tags":[],"content":""},"Linux/Default-Commands/Directory":{"title":"Directory","links":[],"tags":[],"content":"1. Directory\n\npwd : 현재 위치 확인\ncd  : 이동\nls  : Directory 안 내용 출력\n\nls -a : 숨긴 파일 모두 출력\nls -d : Directory 자체의 정보 출력\nls -i : incode1 번호 출력\nls -A : ., ..를 제외한 모든 목록 출력2\nls -F : File 종류 표시3\nls -L : Symbolic link 의 경우 원본 File 의 정보 출력\nls -R : 하위 Directory 의 목록 출력\n\n\nmkdir : Directory 생성\n\nmkdir -p : SubDirectory 를 계층적으로 생성할 때 중간 단계의 Directory를 자동 생성\n\n\nrmdir : Directory delete\n\nFootnotes\n\n\nFile, Directory 에 관한 정보를 가지는 숫자 ↩\n\n\nFile, Directory 의 이름 앞에 붙으면 Hidden File, Directory  - . : Current Directory  - .. : Parent Directory ↩\n\n\n/ : Directory  * : 실행 가능한 File(executable)  @ : 바로가기(Symbolic link)  | : AND(Pipe) ↩\n\n\n"},"Linux/Default-Commands/File":{"title":"File","links":[],"tags":[],"content":"2. File\n\ncat : File 의 내용 출력\n\ncat -n : Row number 붙여 출력\n\n\nmore : File 의 내용을 화면 단위로 출력\n\nmore +number : 출력을 시작할 Row number 를 지정\n\n\nless : File 의 내용을 화면 단위로 출력1\nhead : File 의 1 ~ n Row 까지 출력\n\nhead -Line : 출력할 Row 수를 지정\n\n\ncp : File 이나 Directory 복사\n\ncp -r : SubDirectory &amp; Subfile 까지 모두 복사\ncp -v : 복사 진행 상태 출력\ncp -p : File or Directory 를 복사할 때 복사 대상의 User, Group, Permissions\ncp -i : 복사 대상 File 이 이미 해당 위치에 있다면 User 한테 Overdrive 여부 묻고 복사\ncp -f : 복사 대상 File 이 이미 해당 위치에 있다면 File 을 지우고 강제로 복사\n\n\nrm : File 이나 Directory delete\n\nrm -i : User 한테 여부 묻고 delete\n\n\nln : File link 생성\n\nln -s : Symbolic link file 생성\n\n\ntouch : Empty file 생성\ngreb : (File 내 search) 지정한 Pattern 포함된 Line 찾기   Ex) grep [option][pattern][file]\n\ngrep -c : 일치하는 Row 의 수 출력\ngrep -i : 대소문자 구별 X\ngrep -v : 일치ㅏ하지 않는 Row 만 출력\ngrep -n : 포함된 Row number 함께 출력\ngrep -l : Pattern 이 포함된 File name 출력\ngrep -w : Word 와 일치하는 Row 만 출력\ngrep -x : Line 과 일치하는 Row 만 출력\ngrep -r : SubDirectory 를 포함한 모든 File 에서 search\ngrep -m number 최대로 표시될 수 있는 결과를 제한\ngrep -E : 찾을 pattern 을 정규 포현식으로 찾기\ngrep -F : 찾을 pattern 을 String 으로 찾기\n\n\nfind : 지정한 Path 에서 Search 조건에 맞는 File 찾기   Ex) find [option][path][expressions]2\n\nfind -P : Symbolic link 를 따라가지 않고, Symbolic link 자체 정보 사용\nfind -L : Symbolic link 에 연결된 File 정보 사용\nfind -D : Debug message 출력\n\n\nwhereis : 지정된 Path 에서 Command 의 Binary file 이나 Maual file 의 위치를 찾음\n\nwhereis -b : Binary file 만 Search\nwhereis -m : Maual file 만 Search\nwhereis -s : Source file 만 Search\n\n\n\nFootnotes\n\n\nj : Down key  k : Up key  space bar, Ctrl + f : 다음 Page 이동 \\string : 해당 String 찾기  q : 종료 ↩\n\n\nname : 해당 이름의 File을 찾음(Regex 사용 O)  type : 지정된 File type 에 해당하는 Search for file  user : 해당 User 에게 속한 Search for file  empty : Empty directory 혹은 크기가 0인 Search for file  delete : Search된 File 혹은 Directory delete  exec : Search된 File 에 대해 지정된 Command 실행  path : 지정된 String pattern 에 해당하는 Path 에서 Search  print : Search 결과를 출력, Search 항목을 newline 으로 구분(Default)  print0 : Search 결과를 출력, Search 항목을 null 로 구분  size : File size 를 사용 하여 Search for file  mindepth : Search 을 시작할 SubDirectory 최소 Depth 지정  maxdepth : Search 할 SubDirectory 의 최대 Depth 지정  atime : n 일 이내에 Acess 된 File 찾음  ctime : n 일 이내에 만들어진 File 찾음  mtime : n 일 이내에 수정된 File 을 찾음  cnewer file : 해당 File 보다 최근에 수정된 File 을 찾음 ↩\n\n\n"},"Linux/Default-Commands/vim":{"title":"vim","links":[],"tags":[],"content":"3. Edit documents\n\nvi : 지정한 File 편집   PS) vim1을 더 추천\n\n: : Command mode 진입\nq : 종료\nq! : 강제 종료\nw : File 저장\nwq : 저장 후 종료\n\ninsert mode 전환\n\ni : 현재 커서 위치에 insert\nI : 현재 Row 맨 앞에 insert\na : 현재 커서 다음 위치에 insert\nA : 현재 Row 마지막에 insert\no : 아래 Row 에 insert\nO : 위 Row 에 insert\n\n\n커서 Move\n\nw : 다음 Word 첫 character 로 Move\nb : 이전 Word 첫 character 로 Move\nctrl + f : 한 Page 아래로 커서 Move\nctrl + b : 한 Page 위로 커서 Move\nG : 마지막 Row 로 커서 Move\nnumber : n Row 로 커서 Move\n\n\n내용 delete\n\nx : 현재 커서 위치의 한 character delete\nX : 현재 커서 위치 이전한 한 character delete\ndw : 현재 커서 위치의 Word delete\ndb : 현재 커서 위치 이전 Word delete\ndd : 현재 커서 위치의 Row delete\n[number]dd : 현재 커서 위치부터 아래 n Row 을 delete\nd^ : 현재 Row 에서 현재 커서 위치 이전 Row delete\nd$ : 현재 Row 에서 현재 커서 위치 이후 Row delete\n\n\nTake command\n\nu : 이전 Take command\nU : 해당 Row 에서 한 모든 Command 을 take\ne! : 마지막으로 저장한 애용 이후의 것을 모두 Take\nctrl + r : 이전 Take command 을 take\n\n\nCopy &amp; Paste\n\nyy : 현재 커서 위치의 Row 을 copy\n[number]yy : 현재 커서에서 아래의 n Row 을 copy\np : 현재 커서 위치 아래 Row 에 paste\nP : 현재 커서 위치 위 Row 에 paste\nyw : 현재 커서 이후 Copy Word\nyb : 현재 커서 이전 Copy word\n\n\nSearch\n\n/String : String 을 아래 방향으로 Search\n?String : String 을 위 방향으로 검색\nn : 다음 Search for string\nN : 이전 Search for string\n\n\nReplace\n\ns/String-1/String-2 : 현재 커서 위치 Row 에서 첫 번째 나오는 String-1 을 String-2 로 변경\n%s/String-1/String-2 : File 전체에서 모든 String-1 을 String-2 로 변경\n\n\nFile alias\n\nr [file] : 지정한 File 을 읽어 들여 현재 커서 위치로 삽입\ne : 지정한 파일로 전환 - 저장 완료 후 기능\nn : vi 시작 시 여러 File 을 지정했을 경우 다음 File 로 전환\n\n\nPreferences\n\n~/.vimrc 편집\nset nu : File 내용의 각 Row 에 Row number 표시\nset nonu : Row number 표시를 take\nset list : 눈에 보이지 않는 Special character 를 표시\nset showmode : Current mode 표시\nset noshowmode : Current mode 표시 take\nset : set으로 설정한 모든 vi Preferences 값을 출력\nset all : 모든 vi Environment variable 와 Current 값 출력\n\n\n\n\n\n\n\nFootnotes\n\n\n어느정도 익숙해진 뒤 gedit이나 vscode를 쓰지 않고 vim을 더 잘 황용하고 싶다면 nvim을 추천한다.  nvim을 IDE 처럼 쓸 수 있는 여러 프로젝트 들도 있으니 이를 참고 ↩\n\n\n"},"Linux/Ubuntu":{"title":"Ubuntu","links":["Linux/Default-Commands/Directory","Linux/Default-Commands/File","Linux/Default-Commands/vim"],"tags":[],"content":"Default Commands\n1. Directory\n2. File\n3. Edit Document"},"ROS2/ROS2":{"title":"ROS2","links":[],"tags":[],"content":""},"index":{"title":"Welcome to KMU-FMCL Docs","links":["Linux/Ubuntu","Docker/Docker","ROS2/ROS2"],"tags":[],"content":"Software\n\nUbuntu\nDocker\nROS\n\nSee the documentation for how to get started."}}